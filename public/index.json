
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Jiawei is a PhD candidate at UChicago, merging quantum chemistry with HPC and ML. During his undergrad, Jiawei collaborated with Prof. Jin Zhao and Prof. Noa Marom to research into excited molecular dynamics and surface generation. At Uchicago, he worked with Prof. Giulia Galli on utilizing deep learning for solving electronic structure problems as well as generating general Density Functional Approximation.\n","date":1709510400,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1709510400,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Jiawei is a PhD candidate at UChicago, merging quantum chemistry with HPC and ML. During his undergrad, Jiawei collaborated with Prof. Jin Zhao and Prof. Noa Marom to research into excited molecular dynamics and surface generation.","tags":null,"title":"Jiawei Zhan","type":"authors"},{"authors":null,"categories":null,"content":"Project Overview In the multi-agent Overcooked environment, two chefs must collaborate in a restaurant to cook onion soups. The objective is to develop a reinforcement learning method that maximizes the number of soups delivered within an episode across various layouts. I found this problem particularly interesting and challenging, as traditional reinforcement learning approaches like Q-Learning and policy gradient are not well-suited for multi-agent environments. Consequently, I chose this project as a weekend endeavor to broaden my understanding of reinforcement learning. To address this challenge, I proposed using Multi-Agent Proximal Policy Optimization (MAPPO), which involves centralized training and decentralized execution techniques. Additionally, I implemented reward shaping and multiprocessing to enhance exploration efficiency. This approach proved highly effective in the Overcooked game, as demonstrated by the implementation details available in my Github repository.\nTheory Core: Proximal Policy Optimization Proximal Policy Optimization (PPO) is trying to solve a question: how can we take the biggest possible improvement step on a policy without stepping so far from the old, using the data that are currently available. This’s achieved by clipping in the objective function to prevent the new policy to get far from the old policy. Specifically, PPO update polices via\n\\begin{equation} \\theta_{k + 1}=\\mathrm{argmax}_{\\theta}E_{s, a\\sim\\pi_{\\theta_k}}[L(s, a, \\theta_k, \\theta)], \\end{equation} by taking multiple steps of gradient decent. Here $L$ is given by:\n\\begin{equation} \\begin{split} L(s, a, \\theta_k, \\theta) = \\mathrm{min}\\begin{cases}\\frac{\\pi_{\\theta}(a|s)}{\\pi_{\\theta_k}(a|s)}A^{\\pi_{\\theta_{k}}}(s, a), \\\\ \\mathrm{clip}\\left(\\frac{\\pi_{\\theta}(a|s)}{\\pi_{\\theta_k}(a|s)}, 1-\\epsilon, 1+\\epsilon\\right)A^{\\pi_{\\theta_{k}}}(s, a).\\end{cases} \\end{split} \\end{equation} where hyperparameter $\\epsilon$ controls how far away the new policy is allowed to go from the old. The advantage function $A^{\\pi_{\\theta}}(s, a)$ is approximated via Generalized Advantage Estimation: \\begin{equation} A_t^{\\mathrm{GAE}(\\gamma, \\lambda)} = \\sum_{l=0}^{\\infty}(\\gamma\\lambda)^{l}\\left(r_{t+l} + \\gamma V^{\\pi, \\gamma}(s_{t + l + 1}) - V^{\\pi, \\gamma}(s_{t + l})\\right). \\end{equation} Within the advantage function is the value function $V^{\\pi, \\gamma}(s_t)$ approximated by another model, which is fitted by regression on mean-squared error:\n\\begin{equation} \\psi = \\mathrm{argmin}_{\\phi}||V_{\\psi}^{\\pi, \\gamma}(s_t) - \\sum_{l=0}^{\\infty}\\gamma^{l}r_{t + l}||^2, \\end{equation} through gradient descent algorithm.\nCentralizing Training and Decentralizing Execution The overcooked game is a cooperative, multi-agent games that may be challenging for traditional reinforcement learning approaches such as Q-Learning or policy gradien. Here, I decided to adopt centralizing training and decentralizing execution technics to achieve cooperation amoung multiple-agent in the game. More concretely, for a game with N agents with policies $\\Pi={\\pi_1, …, \\pi_N}$ parameterized by $\\Theta={\\theta_1, …, \\theta_N}$. The gradient of expected return $J(\\theta_i)=E[R_{i}]$ for agent $i$ is:\n\\begin{equation} \\nabla_{\\theta_{i}}J(\\theta_i)=E_{o_i, a_i\\sim\\pi_i}[\\nabla_{\\theta_i}\\mathrm{log}\\pi_i(a_i|o_i)A_{i}^{\\Pi}:(\\mathbf{x}, a1, a2, ..., a_N)], \\end{equation} where $o_i$ is the local observation of agent $i$, and $\\mathbf{x}$ is the global state of the game, including all agents’ features $\\mathbf{\\{[player\\ i\\ features, player\\ i\\ position]\\}}$. In other word, during the training procedure, the advantage function is approximated given the full information of the game and agents’ strategies are evolved based on that. Hopefully, agents can learn to coorperate and make decisions based on their local observation.\nImplementation Details The backbone PPO follows the implementation in the original PPO paper, utilizing a 4-layer policy model with 96, 64, 64, and 6 neurons, and a separate 4-layer value function with 48, 64, 64, and 1 neurons. This section discusses additional implementation aspects, including centralized training and decentralized execution, and outlines strategies to tackle challenges associated with sparse rewards and time-intensive online data collection.\nShared Policy Model and Symmetric Value Function The idea of shared policy is motivated by the pursuit of AGI in the whold AI field as well as the intuition of ‘I should be able to know what to do if I’m in his position.’ In that case, both agent in the Overcooked game will share a single policy game. And two agents are trying to optimized the unified strategy together: \\begin{equation} \\theta_{k+1} = \\mathrm{argmax}_{\\theta}E_{i}\\left[E_{s_i, a_i\\sim\\pi_{\\theta_k}}[L(o_i, a_i, \\theta_k, \\theta)]\\right] \\end{equation}, where $i$ is the agents’ index.\nAdditionally, the centralized value function should be invarient to the switch of two agents, since the agents should be …","date":1712102400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1712102400,"objectID":"79aaf6febc6efb4875fe0b8b22342024","permalink":"http://localhost:1313/project/mappo_overcooked/","publishdate":"2024-04-03T00:00:00Z","relpermalink":"/project/mappo_overcooked/","section":"project","summary":"Using multi-agent Proximal Policy Optimization to solve famous Overcooked game.","tags":["Deep Learning","Reinforcement Learning","High-Performance Computing"],"title":"Multi-Agent Reinforcement Learning for Cooperative Games","type":"project"},{"authors":["Jiawei Zhan","Marco Govoni","Giulia Galli"],"categories":null,"content":"","date":1709510400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1709510400,"objectID":"dc72f2fd9ed4bde77518d5a1215acdbc","permalink":"http://localhost:1313/publication/zhan-2024-screened/","publishdate":"2024-04-21T17:55:20.808156Z","relpermalink":"/publication/zhan-2024-screened/","section":"publication","summary":"","tags":null,"title":"Screened-Exchange Range-Separated Hybrid Functionals for Surfaces and Interfaces","type":"publication"},{"authors":null,"categories":null,"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Organize your notebooks Place the notebooks that you would like to publish in a notebooks folder at the root of your website.\nImport the notebooks into your site pipx install academic academic import \u0026#39;notebooks/**.ipynb\u0026#39; content/post/ --verbose The notebooks will be published to the folder you specify above. In this case, they will be published to your content/post/ folder.\n","date":1699056000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1699056000,"objectID":"94fa5e486d3bf3e0941e2ff6e7126c06","permalink":"http://localhost:1313/post/blog-with-jupyter/","publishdate":"2023-11-04T00:00:00Z","relpermalink":"/post/blog-with-jupyter/","section":"post","summary":"Easily blog from Jupyter notebooks!","tags":null,"title":"Blog with Jupyter Notebooks!","type":"post"},{"authors":["Jiawei Zhan","Marco Govoni","Giulia Galli"],"categories":null,"content":"","date":1685404800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1685404800,"objectID":"08473fab671f592ed01a8183656ba999","permalink":"http://localhost:1313/publication/zhan-2023-nonempirical/","publishdate":"2023-08-17T17:39:48.668159Z","relpermalink":"/publication/zhan-2023-nonempirical/","section":"publication","summary":"Electronic structure calculations based on density functional theory (DFT) have successfully predicted numerous ground-state properties of a variety of molecules and materials. However, exchange and correlation functionals currently used in the literature, including semilocal and hybrid functionals, are often inaccurate to describe the electronic properties of heterogeneous solids, especially systems composed of building blocks with large dielectric mismatch. Here, we present a dielectric-dependent range-separated hybrid functional, screened-exchange range-separated hybrid (SE-RSH), for the investigation of heterogeneous materials. We define a spatially dependent fraction of exact exchange inspired by the static Coulomb-hole and screened-exchange (COHSEX) approximation used in many-body perturbation theory, and we show that the proposed functional accurately predicts the electronic structure of several nonmetallic interfaces, three- and two-dimensional, pristine, and defective solids and nanoparticles.","tags":["Quantum Chemistry","Density Functional Theory","Electronic Structure"],"title":"Nonempirical Range-Separated Hybrid Functional with Spatially Dependent Screened Exchange","type":"publication"},{"authors":["Jiawei Zhan","Marco Govoni","Giulia Galli"],"categories":null,"content":"","date":1677974400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1677974400,"objectID":"393500eac2ce508f0788ec89b05b0393","permalink":"http://localhost:1313/publication/zhan-2023-hybrid/","publishdate":"2024-04-21T17:55:20.810653Z","relpermalink":"/publication/zhan-2023-hybrid/","section":"publication","summary":"","tags":null,"title":"Hybrid functionals for heterogenous materials","type":"publication"},{"authors":["Jiawei Zhan","Marco Govoni","Giulia Galli"],"categories":null,"content":"","date":1677920400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1677920400,"objectID":"66db01081cd36ec25e7dafccda204015","permalink":"http://localhost:1313/talk/screened-exchange-range-separated-hybrid-functionals-for-surfaces-and-interfaces/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/screened-exchange-range-separated-hybrid-functionals-for-surfaces-and-interfaces/","section":"event","summary":"Introducing a general density functional approximation at APS March 2024.","tags":[],"title":"Screened-Exchange Range-Separated Hybrid Functionals for Surfaces and Interfaces","type":"event"},{"authors":["Jiawei Zhan","吳恩達"],"categories":null,"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"http://localhost:1313/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":null,"title":"Welcome to Hugo Blox Builder, the website builder for Hugo","type":"post"},{"authors":["Shuyang Yang","Imanuel Bier","Wen Wen","Jiawei Zhan","Saeed Moayedpour","Noa Marom"],"categories":null,"content":"","date":1590624000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1590624000,"objectID":"7b8fdc31f19ee3d5c6a452d4d3bebf5d","permalink":"http://localhost:1313/publication/yang-2020-ogre/","publishdate":"2024-04-21T17:55:20.802326Z","relpermalink":"/publication/yang-2020-ogre/","section":"publication","summary":"","tags":null,"title":"Ogre: A python package for molecular crystal surface generation with applications to surface energy and crystal habit prediction","type":"publication"},{"authors":["Shuhui Wang","Jiawei Zhan","Kui Chen","Asad Ali","Linghui Zeng","He Zhao","Wanglai Hu","Lixin Zhu","Xiaoliang Xu"],"categories":null,"content":"","date":1589328000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1589328000,"objectID":"1c488e7302d7b57b0b2af59f5e1c3b52","permalink":"http://localhost:1313/publication/wang-2020-potassium/","publishdate":"2024-04-21T17:55:20.805761Z","relpermalink":"/publication/wang-2020-potassium/","section":"publication","summary":"","tags":null,"title":"Potassium-doped g-C3N4 achieving efficient visible-light-driven CO2 reduction","type":"publication"},{"authors":null,"categories":null,"content":"Hugo Blox Builder is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - blox-plugins-netlify - blox-plugins-netlify-cms - blox-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - blox-plugins-netlify - blox-plugins-netlify-cms - blox-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://docs.hugoblox.com/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/HugoBlox/hugo-blox-builder) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://docs.hugoblox.com/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/HugoBlox/hugo-blox-builder) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders as\ngantt section …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"http://localhost:1313/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Hugo Blox Builder is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Hugo Blox Builder Hugo Blox Builder | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"http://localhost:1313/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Hugo Blox Builder's Slides feature.","tags":[],"title":"Slides","type":"slides"}]